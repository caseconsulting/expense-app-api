{
  "name": "expense-app-api",
  "version": "2.1.0",
  "private": true,
  "scripts": {
    "chronos": "node -e 'require(\"./chronos\").start()'",
    "claudia": "claudia",
    "create:claudia:dev": "claudia create --handler lambda.handler --deploy-proxy-api --region us-east-1 --name expense-app-api-dev --runtime nodejs12.x --set-env VUE_APP_AUTH0_DOMAIN=consultwithcase.auth0.com,VUE_APP_AUTH0_AUDIENCE=https://consultwithcase.auth0.com/api/v2/,STAGE=dev --role expense-api-lambda-dev",
    "create:claudia:prod": "claudia create --handler lambda.handler --deploy-proxy-api --region us-east-1 --name expense-app-api-prod --runtime nodejs12.x --set-env VUE_APP_AUTH0_DOMAIN=consultwithcase.auth0.com,VUE_APP_AUTH0_AUDIENCE=https://consultwithcase.auth0.com/api/v2/,STAGE=prod --role expense-api-lambda-prod --profile prod",
    "create:claudia:test": "claudia create --handler lambda.handler --deploy-proxy-api --region us-east-1 --name expense-app-api-test --runtime nodejs12.x --set-env VUE_APP_AUTH0_DOMAIN=consultwithcase.auth0.com,VUE_APP_AUTH0_AUDIENCE=https://consultwithcase.auth0.com/api/v2/,STAGE=test --role expense-api-lambda-test",
    "debug": "nodemon --trace-warnings --inspect bin/www",
    "deploy:chronos:dev": "aws cloudformation deploy --template-file packaged.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --stack-name expense-app-dev --region us-east-1",
    "deploy:chronos:prod": "aws cloudformation deploy --template-file packaged.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --stack-name expense-app-prod --region us-east-1 --profile prod",
    "deploy:chronos:test": "aws cloudformation deploy --template-file packaged.yaml --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM --stack-name expense-app-test --region us-east-1",
    "deploy:claudia": "npm run update",
    "deploy:claudia:prod": "npm run update:prod",
    "predeploy:dev": "npm run download:dev",
    "deploy:dev": "npm run deploy:claudia && npm run tag:dev && npm run package:chronos:dev && npm run deploy:chronos:dev",
    "predeploy:prod": "npm run download:prod",
    "deploy:prod": "npm run deploy:claudia:prod && npm run tag:prod && npm run package:chronos:prod && npm run deploy:chronos:prod",
    "predeploy:test": "npm run download:test",
    "deploy:test": "npm run deploy:claudia && npm run tag:test && npm run package:chronos:test && npm run deploy:chronos:test",
    "destroy": "claudia destroy",
    "download:dev": "npm run download:dev:env && npm run download:dev:claudia",
    "download:dev:claudia": "aws s3 cp s3://case-consulting-expense-app-resources-dev/claudia.json claudia.json",
    "download:dev:env": "aws s3 cp s3://case-consulting-expense-app-resources-dev/.env .env",
    "download:local:env": "aws s3 cp s3://case-expense-app/.env .env",
    "download:prod": "npm run download:prod:env && npm run download:prod:claudia",
    "download:prod:claudia": "aws s3 cp s3://case-consulting-expense-app-resources-prod/claudia.json claudia.json --profile prod",
    "download:prod:env": "aws s3 cp s3://case-consulting-expense-app-resources-prod/.env .env --profile prod",
    "download:test": "npm run download:test:env && npm run download:test:claudia",
    "download:test:claudia": "aws s3 cp s3://case-consulting-expense-app-resources-test/claudia.json claudia.json",
    "download:test:env": "aws s3 cp s3://case-consulting-expense-app-resources-test/.env .env",
    "eslint": "eslint . --ext .js --ignore-path .jshintignore --fix",
    "invoke:chronos": "sam local invoke ChronosFunction --env-vars env.json --no-event --template CloudFormation.yaml",
    "lint": "npm run eslint",
    "package:chronos:dev": "aws cloudformation package --template-file CloudFormation.yaml --s3-bucket case-consulting-expense-app-resources-dev --s3-prefix expense-app-api --output-template-file packaged.yaml",
    "package:chronos:prod": "aws cloudformation package --template-file CloudFormation.yaml --s3-bucket case-consulting-expense-app-resources-prod --s3-prefix expense-app-api --output-template-file packaged.yaml --profile prod",
    "package:chronos:test": "aws cloudformation package --template-file CloudFormation.yaml --s3-bucket case-consulting-expense-app-resources-test --s3-prefix expense-app-api --output-template-file packaged.yaml",
    "pm2": "pm2",
    "pm2:kill": "pm2 kill",
    "pm2:list": "pm2 list",
    "pm2:monit": "pm2 monit",
    "precommit": "npm run eslint && npm run test",
    "receiptSync:dev": "node ./js/ReceiptSync.js dev",
    "receiptSync:prod": "node ./js/ReceiptSync.js prod --profile prod",
    "receiptSync:test": "node ./js/ReceiptSync.js test",
    "restart": "pm2 restart services.yml",
    "start": "pm2 start services.yml",
    "stop": "pm2 stop services.yml",
    "tag:dev": "claudia tag --tags Application=expense-app,Stage=dev",
    "tag:prod": "claudia tag --tags Application=expense-app,Stage=prod",
    "tag:test": "claudia tag --tags Application=expense-app,Stage=test",
    "test": "jasmine",
    "test-coverage": "nyc --reporter=text --reporter=html --exclude=spec/** jasmine",
    "update": "claudia update --runtime nodejs12.x",
    "update:prod": "claudia update --runtime nodejs12.x --profile prod",
    "upload:dev:claudia": "aws s3 cp claudia.json s3://case-consulting-expense-app-resources-dev/claudia.json --sse",
    "upload:dev:env": "aws s3 cp .env s3://case-consulting-expense-app-resources-dev/.env --sse",
    "upload:prod:claudia": "aws s3 cp claudia.json s3://case-consulting-expense-app-resources-prod/claudia.json --sse --profile prod",
    "upload:prod:env": "aws s3 cp .env s3://case-consulting-expense-app-resources-prod/.env --sse --profile prod",
    "upload:test:claudia": "aws s3 cp claudia.json s3://case-consulting-expense-app-resources-test/claudia.json --sse",
    "upload:test:env": "aws s3 cp .env s3://case-consulting-expense-app-resources-test/.env --sse",
    "validate": "npm ls"
  },
  "dependencies": {
    "ajv": "^6.12.0",
    "aws-sdk": "^2.639.0",
    "aws-serverless-express": "^3.3.6",
    "body-parser": "^1.19.0",
    "cookie-parser": "^1.4.4",
    "cors": "^2.8.5",
    "debug": "^4.1.1",
    "dotenv": "^8.2.0",
    "express": "^4.17.1",
    "express-jwt": "^5.3.1",
    "express-jwt-authz": "^2.3.1",
    "got": "^10.7.0",
    "jwks-rsa": "^1.7.0",
    "lodash": "^4.17.15",
    "metascraper": "^5.11.6",
    "metascraper-clearbit": "^5.11.7",
    "metascraper-description": "^5.11.6",
    "metascraper-image": "^5.11.6",
    "metascraper-logo": "^5.11.6",
    "metascraper-publisher": "^5.11.6",
    "metascraper-title": "^5.11.6",
    "metascraper-url": "^5.11.6",
    "moment": "^2.24.0",
    "moment-range": "^4.0.2",
    "morgan": "^1.9.1",
    "multer": "^1.4.2",
    "multer-s3": "^2.9.0",
    "pm2": "^3.5.2",
    "pug": "^2.0.4",
    "serve-favicon": "^2.5.0",
    "through": "^2.3.8",
    "uuid": "^3.4.0"
  },
  "devDependencies": {
    "acorn": "^7.1.1",
    "aws-sdk-mock": "^5.1.0",
    "claudia": "^5.12.0",
    "eslint": "^6.8.0",
    "jasmine": "^3.5.0",
    "nodemon": "^2.0.2",
    "nyc": "^15.0.0",
    "precommit-hook": "^3.0.0"
  },
  "pre-commit": [
    "eslint",
    "test"
  ]
}
